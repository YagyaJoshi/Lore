@model Loregroup.Core.ViewModels.ProductViewModel
@{
    ViewBag.Title = "Product List";
}

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
<link href="~/Content/css/datatables/dataTables.bootstrap.css" rel="stylesheet" />
<script type="text/javascript" src="http://code.jquery.com/jquery-2.1.1.min.js"></script>

<style type="text/css">
    .data-table {
        border-collapse: collapse;
        border-spacing: 0;
    }

    td:nth-child(6) {
        word-break: break-word;
    }
</style>

<script>
    function Confirmation() {
        var txt;
        var r = confirm("Are you sure you want to delete this entry?");
        if (r == true) {
            return true;
            //txt = "You pressed OK!";
        } else {
            return false;
            //txt = "You pressed Cancel!";
        }
    }

</script>
@{
    if (TempData["Message11"] != null)
    {
        <script type="text/javascript">
        alert(@Html.Raw(Json.Encode(TempData["Message11"])));
        </script>
    }
}
<div class="col-md-12">
    <div class="box-header">

        @*<h3 class="box-title">Product List</h3>
            <br />*@
        <a href="~/Product/AddNewProduct" class="btn btn-primary" style="margin-left: 5px;margin-top: 5px;">Add New Product</a>
        <br />
        <br />
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Category")
                @Html.BootstrapDropDownListFor(m => m.CategoryId, new SelectList(Model.CategoryList, "Id", "Category", Model.CategoryId))
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Collection Year")
                @Html.BootstrapDropDownListFor(m => m.CollectionYearId, new SelectList(Model.CollectionYearList, "Id", "CollectionYear", Model.CollectionYearId))
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Cut Of Dress")
                @Html.BootstrapDropDownListFor(m => m.CutOfDressId, new SelectList(Model.CutOfDressList, "Id", "CutOfDress", Model.CutOfDressId))
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Color")
                @Html.BootstrapDropDownListFor(m => m.ColourId, new SelectList(Model.ColourList, "Id", "Colour", Model.ColourId))
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Fabric")
                @Html.BootstrapDropDownListFor(m => m.FabricId, new SelectList(Model.FabricList, "Id", "FabricName", Model.FabricId))
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                <button type="button" class="btn btn-primary btn-md refresh-button " id="refresh-button" style="margin-top: 25px;margin-bottom: 10px;">Refresh</button>
            </div>
        </div>

    </div>

    @*<div class="row"><br /><hr /></div>*@
    <table id="data-table" class="table table-striped table-bordered" style="width:100%; overflow-x:scroll"></table>
</div>

@*<script src="//cdn.datatables.net/1.10.7/js/jquery.dataTables.min.js"></script>*@
<script src="//cdn.datatables.net/1.10.7/js/jquery.dataTables.js"></script>
<script src="//cdn.datatables.net/plug-ins/1.10.7/integration/bootstrap/3/dataTables.bootstrap.js"></script>

<script type="text/javascript" src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>

<script type="text/javascript">

    var mpvalue = "";
    var ddlCategoryId = $('#CategoryId option:selected').val();
    var ddlCollectionYearId = $('#CollectionYearId option:selected').val();
    var ddlCutOfDressId = $('#CutOfDressId option:selected').val();
    var ddlColourId = $('#ColourId option:selected').val();
    var ddlFabricId = $('#FabricId option:selected').val();

    $(function () {

        var productListVM = {
            dt: null,

            init: function () {
                dt = $('#data-table').DataTable({
                    "ordering": false,
                    "serverSide": true,
                    "processing": true,
                    "scrollY": 450,
                    "oLanguage": {
                        "sProcessing": "<img src='/Content/img/ajax-loader.gif'>"
                    },
                    //"scrollCollapse": true,
                    //"jQueryUI": true,

                    "ajax": {
                        "url": "/Product/GetAllProduct?&categoryId=" + ddlCategoryId + "&collectionYearId=" + ddlCollectionYearId + "&cutOfDressId=" + ddlCutOfDressId + "&colourId=" + ddlColourId + "&fabricId=" + ddlFabricId, //$('#aioConceptName :selected').text();
                        "type": "POST"
                    },
                    //responsive: true,
                    //autoWidth: false,
                    //"ajax": "/AllReports/GetProfitLossReportData?&mpid=0", //+ $('#MarketPlaceId').val(),
                    "columns": [
                        //{ "title": "", "data": "Edit", "searchable": false },
                        //{ "title": "", "data": "Delete", "searchable": false },
                        { "title": "Style No.", "data": "ProductName" },
                        { "title": "Brand", "data": "SeletedBrandNames" },
                        { "title": "Category", "data": "SeletedCategoryNames" },
                        { "title": "Collection Year", "data": "CollectionYear" },
                        { "title": "Cut Of Dress", "data": "CutOfDress" },
                        { "title": "Color", "data": "SeletedColorNames", "width": "300px" },
                        { "title": "Fabric", "data": "SelectedFabricNames" },
                        { "title": "Publish", "data": "PublishString" },
                        { "title": "PriceUSD", "data": "PriceUSD", "visible": false },
                        { "title": "PriceEURO", "data": "PriceEURO", "visible": false },
                        { "title": "PriceGBP", "data": "PriceGBP", "visible": false },
                        {
                            "title": "Price", "data": "DistributionId",
                            render: function (data, type, row) {
                                if (row["IsActive"] == true) {
                                    return this.visible = row["PriceGBP"];
                                } else{
                                    switch(data) {
                                        case 1: return this.visible = row["PriceUSD"]; break;
                                        case 2: return this.visible = row["PriceGBP"]; break;
                                        case 3: return this.visible = row["PriceEURO"]; break;
                                        case 4: return this.visible = row["PriceUSD"]; break;
                                        default: return 'N/A';
                                    }
                                }
                            }
                        },
                        { "title": "Purchase Price", "data": "PurchasePrice" },
                        {
                            "title": "Status", "data": "StatusId",
                            render: function (data, type, row) {
                                switch (data) {
                                    case 1: return '<span class="label label-success">Active</span>'; break;
                                    case 2: return '<span class="label label-info">In-Active</span>'; break;
                                    case 3: return '<span class="label label-warning">Pending</span>'; break;
                                    case 4: return '<span class="label label-danger">Deleted</span>'; break;
                                    default: return 'N/A';
                                }
                            }
                        },
                        { "title": "", "data": "Edit" },
                        {
                            "title": "", "data": "Delete", "width": "null", "render": function (data, type, row) {
                                if (row["IsActive"] == true) {
                                    return this.visible = row["Delete"];
                                } else {
                                    return this.visible = "";
                                }
                            }
                        },
                        { "title": "", "data": "IsActive", "width": "null", "visible": false },
                        //  { "title": "", "data": "Delete" },
                        //{ "title": "Total Count", "data": "DidNumberCount" },
                        //{ "title": "Allotted", "data": "allotted" },
                    ],
                    "lengthMenu": [[50, 100, 200, 500], [50, 100, 200, 500]]
                });
            },

            refresh: function () {
                ddlCategoryId = $('#CategoryId option:selected').val();
                ddlCollectionYearId = $('#CollectionYearId option:selected').val();
                ddlCutOfDressId = $('#CutOfDressId option:selected').val();
                ddlColourId = $('#ColourId option:selected').val();
                ddlFabricId = $('#FabricId option:selected').val();

                dt.ajax.url("/Product/GetAllProduct?&categoryId=" + ddlCategoryId + "&collectionYearId=" + ddlCollectionYearId + "&cutOfDressId=" + ddlCutOfDressId + "&colourId=" + ddlColourId + "&fabricId=" + ddlFabricId).load();
            }
        }

        $('#refresh-button').on("click", productListVM.refresh);

        /////////////////////////////////////////////////////////////////
        // Let's kick it all off
        productListVM.init();
    })

</script>


