@model Loregroup.Core.ViewModels.PurchaseOrderViewModel

@{
    ViewBag.Title = "UpdateInventory";
}

<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.12.0/moment.js"></script>

<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/themes/smoothness/jquery-ui.min.css" />

@*AutoComplete For Product Start*@
<script type="text/javascript">
    
    function GetColours(Colourid) {
        if (Colourid == null) {
            Colourid = 0;
        }
        debugger;
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetColoursForProduct", "Order")',
            dataType: 'json',
            data: { ProductId: $("#ProductModel_Id").val() },
            success: function (states) {
                $('#ColourId').append($('<option/>', {
                    value: 0,
                    text: "--Select Color--"
                }));
                $.each(states, function (i, color) {
                    $('#ColourId').append('<option value ="' + color.Value + '">' + color.Text + '</option>');
                });

                $('#ColourId').val(Colourid);
            },
            error: function (ex) {
                alert('Failed to retrieve Colors.' + ex);
            }
        });
    }

    $(document).ready(function () {
        debugger;
        if ($("#ProductModel_Id").val() > 0) {
            //alert($("#kapil").text());
            GetColours($("#kapil").text());
        }

        $("#ProductModel_ProductName").autocomplete({

            source: function (request, response) {
                $.ajax({
                    url: "/Order/SearchByProductName",
                    type: "POST",
                    dataType: "json",
                    data: {
                        Prefix: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.ProductName, value: item.Id };
                        }))
                    }
                })
            },
            select: function (e, ui) {
                var vn = ui.item.value;
                $("#ProductModel_Id").val(vn);
                var currency = $('#CustomerModel_CurrencyName').val();
                debugger;
                $.ajax({
                    url: "/Order/GetProductById",
                    type: "POST",
                    dataType: "json",
                    data: {
                        number: vn,
                        currency: currency
                    },

                    dataFilter: function (data) {
                        return data;
                    },
                    success: function (data) {

                        $('#ProductModel_ProductName').val(data.ProductName);
                        $('#ProductModel_CustomerPrice').val(data.CustomerPrice);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("Error getting prospect list: " + textStatus + '---' + errorThrown + '===' + XMLHttpRequest);
                    }
                })

                $('#ColourId').empty();
                GetColours();

            },
            messages: {
                noResults: "", results: ""
            }
        });
    })

</script>
@*AutoComplete For Product End*@


@using (Html.BeginForm("UpdateInventory", "Product", FormMethod.Post))
{
    <div class="box box-info col-md-12">
        <div class="box-body">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.ProductModel.ProductName)
                        @Html.BsTextBoxFor(x => x.ProductModel.ProductName)
                        @*@Html.ValidationMessageFor(x => x.ProductModel.ProductName)*@
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ColourId)
                        @Html.BootstrapDropDownListFor(m => m.ColourId, new SelectList(Model.ColourList, "Id", "Colour", Model.ColourId))
                        @*@Html.ValidationMessageFor(model => model.ColourId)*@
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.WareHouseId)
                        @Html.BootstrapDropDownListFor(m => m.WareHouseId, new SelectList(Model.WareHouseList, "Id", "WareHouseName", Model.WareHouseId))
                        @* @Html.EnBsDropDownListFor(m => m.Currency, new Dictionary<string, object>())*@
                        @Html.ValidationMessageFor(model => model.WareHouseId)
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <button id="Search" type="submit" class="btn btn-primary pull-right"  onclick="SearchClick()">Search</button>
            </div>
        </div>
        <label style="visibility:hidden" id="kapil">@Model.ColourId</label>

    </div>

    if (Model.ProductModel.Id > 0)
    {
        <div class="box box-info col-md-6">
            <div class="box-body">
                <div class="row">

                    <table id="DataTable" class="table">
                        <thead>
                            <tr>
                                <th> SizeUK </th>
                                <th> In Stock </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var size in Model.SizeList)
                            {
                            <tr id="@size.SizeUK">
                                <td>
                                    @size.SizeUK
                                </td>
                              
                                
                            <td contenteditable="true">

                                @size.ReceivedQty
                            </td>
                                   
                                  
                                </tr>
                            }
                        </tbody>
                    </table>

                </div>
            </div>
            <a class="btn btn-primary pull-right" onclick="return SubmitClick();"> Update </a>
        </div>
    }
    @*else if (Model.ProductModel.ProductName != null && Model.IsDataAvailable == false)
        {
            //<h3>@Model.ProductModel.ProductName</h3>
            //<h3>@Model.ProductListModel.SizeModel.Count</h3>
            <h3>No Record Found</h3>
        }*@
    @Html.HiddenFor(x => x.Id);
    @Html.HiddenFor(x => x.ProductModel.Id);
}
<script>
    debugger;
    function SearchClick() {
        //alert("hello");
        if ($("#ProductModel_ProductName") == "" || $("#ColourId option:selected").val() == 0 || $("#WareHouseId option:selected").val() == 0) {
            alert("All fields are required.")
            return false;
        }
        else {
            return true;
        }
    }
    debugger;
    function SubmitClick() {

        var chk = false;

        var size2qty = 0, size4qty = 0, size6qty = 0,
                         size8qty = 0, size10qty = 0, size12qty = 0,
                         size14qty = 0, size16qty = 0, size18qty = 0,
                         size20qty = 0, size22qty = 0, size24qty = 0,
                         size26qty = 0, size28qty = 0, size30qty = 0,
                         size32qty = 0, size34qty = 0;

        $.each($("#DataTable tbody tr"), function () {
            //alert("Hello");
            //$(this).find('td:eq(2)').css("color", "#000000")

            //if (parseInt($.trim($(this).find('td:eq(2)').html())) > parseInt($.trim($(this).find('td:eq(1)').html()))) {
            //    chk = true;
            //    $(this).find('td:eq(2)').css("color", "#FF3700")
            //    //return false
            //}
            //else {
                if (parseInt($.trim($(this).find('td:eq(0)').html())) == 2) {
                    size2qty = parseInt($.trim($(this).find('td:eq(1)').html()));

                    //alert(size2qty);
                }
                else if (parseInt($.trim($(this).find('td:eq(0)').html())) == 4) {
                    size4qty = parseInt($.trim($(this).find('td:eq(1)').html()));
                    
                }
                else if (parseInt($.trim($(this).find('td:eq(0)').html())) == 6) {
                    size6qty = parseInt($.trim($(this).find('td:eq(1)').html()));
                    
                }
                else if (parseInt($.trim($(this).find('td:eq(0)').html())) == 8) {
                    size8qty = parseInt($.trim($(this).find('td:eq(1)').html()));


                }
                else if (parseInt($.trim($(this).find('td:eq(0)').html())) == 10) {
                    size10qty = parseInt($.trim($(this).find('td:eq(1)').html()));
                    
                }
                else if (parseInt($.trim($(this).find('td:eq(0)').html())) == 12) {
                    size12qty = parseInt($.trim($(this).find('td:eq(1)').html()));
                    
                }
                else if (parseInt($.trim($(this).find('td:eq(0)').html())) == 14) {
                    size14qty = parseInt($.trim($(this).find('td:eq(1)').html()));
                    
                }
                else if (parseInt($.trim($(this).find('td:eq(0)').html())) == 16) {
                    size16qty = parseInt($.trim($(this).find('td:eq(1)').html()));
                    
                }
                else if (parseInt($.trim($(this).find('td:eq(0)').html())) == 18) {
                    size18qty = parseInt($.trim($(this).find('td:eq(1)').html()));
                    
                }
                else if (parseInt($.trim($(this).find('td:eq(0)').html())) == 20) {
                    size20qty = parseInt($.trim($(this).find('td:eq(1)').html()));
                    
                }
                else if (parseInt($.trim($(this).find('td:eq(0)').html())) == 22) {
                    size22qty = parseInt($.trim($(this).find('td:eq(1)').html()));
                    
                }
                else if (parseInt($.trim($(this).find('td:eq(0)').html())) == 24) {
                    size24qty = parseInt($.trim($(this).find('td:eq(1)').html()));
                    
                }
                else if (parseInt($.trim($(this).find('td:eq(0)').html())) == 26) {
                    size26qty = parseInt($.trim($(this).find('td:eq(1)').html()));
                    
                }
                else if (parseInt($.trim($(this).find('td:eq(0)').html())) == 28) {
                    size28qty = parseInt($.trim($(this).find('td:eq(1)').html()));
                    
                }
                else if (parseInt($.trim($(this).find('td:eq(0)').html())) == 30) {
                    size30qty = parseInt($.trim($(this).find('td:eq(1)').html()));
                    
                }
                else if (parseInt($.trim($(this).find('td:eq(0)').html())) == 32) {
                    size32qty = parseInt($.trim($(this).find('td:eq(1)').html()));
                    
                }
                else if (parseInt($.trim($(this).find('td:eq(0)').html())) == 34) {
                    size34qty = parseInt($.trim($(this).find('td:eq(1)').html()));
                    //return;
                }
           // }
            
        });

        //if (chk == true) {
        //    alert("Received Quantity cannot be greater than ordered quantity.");
        //    return
        //}
        //else {
            var List = "[{ 'SizeUK': '2', 'ReceivedQty':" + size2qty + "}," + "{ 'SizeUK': '4', 'ReceivedQty':" + size4qty + "}," + "{ 'SizeUK': '6', 'ReceivedQty':" + size6qty +
            "}," + "{ 'SizeUK': '8', 'ReceivedQty':" + size8qty + "}," + "{ 'SizeUK': '10', 'ReceivedQty':" + size10qty + "}," + "{ 'SizeUK': '12', 'ReceivedQty':" + size12qty +
            "}," + "{ 'SizeUK': '14', 'ReceivedQty':" + size14qty + "}," + "{ 'SizeUK': '16', 'ReceivedQty':" + size16qty + "}," + "{ 'SizeUK': '18', 'ReceivedQty':" + size18qty +
            "}," + "{ 'SizeUK': '20', 'ReceivedQty':" + size20qty + "}," + "{ 'SizeUK': '22', 'ReceivedQty':" + size22qty + "}," + "{ 'SizeUK': '24', 'ReceivedQty':" + size24qty +
            "}," + "{ 'SizeUK': '26', 'ReceivedQty':" + size26qty + "}," + "{ 'SizeUK': '28', 'ReceivedQty':" + size28qty + "}," + "{ 'SizeUK': '30', 'ReceivedQty':" + size30qty +
            "}," + "{ 'SizeUK': '32', 'ReceivedQty':" + size32qty + "}," + "{ 'SizeUK': '34', 'ReceivedQty':" + size34qty + "}]";
        
            //alert(List);

            var orderArr = [];

            orderArr.length = 0;
            //alert($("#ColourId option:selected").val())
            orderArr.push({
                Product: {
                    Id: $("#ProductModel_Id").val(),
                    ColourId: $("#ColourId option:selected").val(),
                   
                    //OrderPrice: $(this).find('td:eq(4)').html(),
                },
                SizeModelString: List,
                //Amount: $(this).find('td:eq(23)').html()
            });
        

            var customerorderdata = JSON.stringify({
                WareHouseId: $("#WareHouseId option:selected").val(),
                // CustomerModel: {
                //CustomerFullName: $("#POmodel_CustomerModel_CustomerFullName").val(),
                //Id: $("#POmodel_CustomerModel_Id").val(),
                //EmailId: $("#POmodel_CustomerModel_EmailId").val(),
                //MobileNo: $("#POmodel_CustomerModel_MobileNo").val(),
                
                // },
                //DeliveryDate: $("#DeliveryDate").val(),
                //OrderDate:$("#OrderDate").val(),
                //SizeQtyList: $("#SizeQtyList").val(),
                //ShippingCharge : $("#ShippingCharge").val(),
                //OrderNo: $("#OrderNo").val(),
                //Tax: $("#Tax").val(),
                ProductList: orderArr,
                //OrderRefrence: $("#OrderNo").val(),
                //WareHouseId: $("#POmodel_WareHouseId").val(),
                Id: $("#Id").val()
            });

        debugger;
            $.ajax({
                url: "/Product/SaveUpdatedInventory",
                type: "POST",
                dataType: "json",
                //contentType: 'application/json; charset=utf-8',
                //data: data,
                data: {
                    //  __RequestVerificationToken: token,
                    model: customerorderdata
                },
                success: function (data) {
                    alert("success !!");
                    document.location = '@Url.Action("UpdateInventory", "Product")';
                    //Product/UpdateInventory
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("Error getting prospect list: " + textStatus + '---' + errorThrown + '===' + XMLHttpRequest);
                }
            })
    
       // }
        
    }
    debugger;
    $("#ProductModel_Id").change(function () {
        //alert("Hello");
        $('#ColourId').empty();
        GetColours(0);
    });

</script>